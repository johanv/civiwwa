<?php
/*
  civiwwa_deploy - Enables all necessary modules and extensions.
  Copyright (C) 2016  Johan Vervloet

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * Implements hook_install.
 */
function civiwwa_deploy_enable() {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'org.civicoop.configitems']);
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.base']);
  civicrm_api3('Extension', 'enable', ['key' => 'uk.co.vedaconsulting.mailchimp']);
  civicrm_api3('Extension', 'enable', ['key' => 'be.chiro.civi.idcache']);
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.newsletter']);
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.apiaccess']);
}

function civiwwa_deploy_update_7100(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.apiaccess']);
}

function civiwwa_deploy_update_7101(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.tournament']);
}

/**
 * Enable cards.iwwa.belgium.
 *
 * @param $sandbox
 */
function civiwwa_deploy_update_7103(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.belgium']);
}

/**
 * Enable cards.iwwa.membership.
 *
 * @param $sandbox
 */
function civiwwa_deploy_update_7105(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.membership']);
}

/**
 * Fix participant registration dates (#46).
 *
 * @param $sandbox
 */
function civiwwa_deploy_update_7106(&$sandbox) {
  // For old events, take event date for registration date.
  civicrm_initialize();
  $eventsResult = civicrm_api3('Event', 'get', ['id' => ['<' => 6]]);
  foreach ($eventsResult['values'] as $event) {
    civicrm_api3('Participant', 'get', [
      'event_id' => $event['id'],
      'api.Participant.create' => [
        'id' => '$value.id',
        'register_date' => $event['start_date'],
      ],
      'options' => ['limit' => 0],
    ]);
  }

  // remigrate recent participants. (Real registration date is available)
  $migration = Migration::getInstance('Participants');
  $migration->processImport(['force' => 1, 'update' => 1]);
}

/**
 * cards.iwwa.membership -> cards.iwwa.iwwamembership.
 *
 * Otherwise we'll have namespace conflicts with core CiviCRM.
 *
 * @param $sandbox
 */
function civiwwa_deploy_update_7107(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'disable', ['key' => 'cards.iwwa.membership']);
  civicrm_api3('Extension', 'uninstall', ['key' => 'cards.iwwa.membership']);
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.iwwamembership']);
}

/**
 * Disable unused CiviCRM components (#53).
 *
 * @param $sandbox
 */
function civiwwa_deploy_update_7108(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Setting', 'create', ['enable_components' => ['CiviEvent', 'CiviMember']]);
}

/**
 * Enable excel export extension (#75).
 */
function civiwwa_deploy_update_7109(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'ca.bidon.civiexportexcel']);
}


/**
 * Enable smartgroups and idotproof extensions (#73).
 */
function civiwwa_deploy_update_7110(&$sandbox) {
  civicrm_initialize();
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.smartgroups']);
  civicrm_api3('Extension', 'enable', ['key' => 'cards.iwwa.idiotproof']);  
}

